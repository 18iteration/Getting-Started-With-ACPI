(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{388:function(e,t,a){e.exports=a.p+"assets/img/devicemanager.770a10fc.png"},389:function(e,t,a){e.exports=a.p+"assets/img/ssdt-before.f71c9e04.png"},390:function(e,t,a){e.exports=a.p+"assets/img/ssdt-after.28584bc4.png"},442:function(e,t,a){"use strict";a.r(t);var r=a(28),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"fixing-backlight-manual"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fixing-backlight-manual"}},[e._v("#")]),e._v(" Fixing Backlight: Manual")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#finding-the-acpi-path"}},[e._v("Finding the ACPI path")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#edits-to-the-sample-ssdt"}},[e._v("Edits to the sample SSDT")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#compiling-the-ssdt"}},[e._v("Compiling the SSDT")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#wrapping-up"}},[e._v("Wrapping up")])])]),e._v(" "),r("h2",{attrs:{id:"finding-the-acpi-path"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#finding-the-acpi-path"}},[e._v("#")]),e._v(" Finding the ACPI path")]),e._v(" "),r("h3",{attrs:{id:"on-macos"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#on-macos"}},[e._v("#")]),e._v(" On MacOS")]),e._v(" "),r("p",[e._v("Unfortunately there is no guidance for this yet. Try on Linux or Windows.")]),e._v(" "),r("h3",{attrs:{id:"on-linux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#on-linux"}},[e._v("#")]),e._v(" On Linux")]),e._v(" "),r("p",[e._v("These steps work on Ubuntu and may work on other distros. If not then try the procedure for Windows."),r("br"),e._v("\nUse the "),r("code",[e._v("lspci")]),e._v(" command to get your display adapters PCI identification number."),r("br"),e._v("\nThe output here will be different on your system!")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("# lspci -D\n0000:00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)\n0000:00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]\n0000:00:01.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)\n0000:00:02.0 VGA compatible controller: VMware SVGA II Adapter\n0000:00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)\n0000:00:04.0 System peripheral: InnoTek Systemberatung GmbH VirtualBox Guest Service\n")])])]),r("p",[e._v("Search the output for an entry that looks like your display adapter. E.g: In this example we have "),r("code",[e._v("VGA compatible controller")]),e._v(" with PCI number "),r("code",[e._v("0000:00:02.0")]),e._v(". The format of this number is "),r("code",[e._v("domain:bus:device:function")]),e._v(".")]),e._v(" "),r("p",[e._v("Now use this command from a Terminal to find the ACPI path for your display adapter"),r("br"),e._v(" "),r("code",[e._v("# cat /sys/class/pci_bus/<domain:bus>/device/<domain:bus:device:function>/firmware_node/path")])]),e._v(" "),r("p",[e._v("For example")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("# cat /sys/class/pci_bus/0000:00/device/0000:00:02.0/firmware_node/path\n\\_SB_.PCI0.GFX0  <-- The ACPI path\n")])])]),r("p",[e._v("Further details "),r("a",{attrs:{href:"https://unix.stackexchange.com/questions/653143/how-to-get-bios-device-name-from-linux-same-as-windows-device-manager-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("at this link."),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"on-windows"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#on-windows"}},[e._v("#")]),e._v(" On Windows")]),e._v(" "),r("p",[e._v("Open DeviceManager, and head to the following:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Device Manager -> Display Adapters -> Properties -> Details > BIOS device name\n")])])]),r("p",[r("img",{attrs:{src:a(388),alt:"Credit to 1Revenger1 for the image"}})]),e._v(" "),r("p",[e._v("From the above example, we can see our display is hooked up to "),r("code",[e._v("\\_SB.PCI0.GFX0")])]),e._v(" "),r("h2",{attrs:{id:"edits-to-the-sample-ssdt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#edits-to-the-sample-ssdt"}},[e._v("#")]),e._v(" Edits to the sample SSDT")]),e._v(" "),r("p",[e._v("Now that we have our ACPI path, lets grab our SSDT and get to work:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-PNLF.dsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSDT-PNLF.dsl"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("By default, this uses "),r("code",[e._v("\\_SB.PCI0.GFX0")]),e._v(" for the pathing. you'll want to rename accordingly. For this example, we'll assume your pathing is "),r("code",[e._v("\\_SB.PCI0.GPU0")]),e._v(":")]),e._v(" "),r("p",[r("strong",[e._v("Before")]),e._v(":")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("External (_SB_.PCI0.GFX0, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.GFX0) <- Rename this\n\nDevice(_SB.PCI0.GFX0.PNLF) <- Rename this\n")])])]),r("p",[r("img",{attrs:{src:a(389),alt:""}})]),e._v(" "),r("p",[e._v("Following the example pathing we found, the SSDT should look something like this:")]),e._v(" "),r("p",[r("strong",[e._v("After")]),e._v(":")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("External (_SB_.PCI0.GPU0, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.GPU0) <- Renamed\n\nDevice(_SB.PCI0.GPU0.PNLF) <- Renamed\n")])])]),r("p",[r("img",{attrs:{src:a(390),alt:""}})]),e._v(" "),r("h2",{attrs:{id:"compiling-the-ssdt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#compiling-the-ssdt"}},[e._v("#")]),e._v(" Compiling the SSDT")]),e._v(" "),r("p",[e._v("With the SSDT done, you're now "),r("RouterLink",{attrs:{to:"/Manual/compile.html"}},[e._v("ready to compile the SSDT!")])],1),e._v(" "),r("h2",{attrs:{id:"wrapping-up"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#wrapping-up"}},[e._v("#")]),e._v(" Wrapping up")]),e._v(" "),r("p",[e._v("Once you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:")]),e._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/cleanup.html"}},[r("strong",[e._v("Cleanup")])])],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);